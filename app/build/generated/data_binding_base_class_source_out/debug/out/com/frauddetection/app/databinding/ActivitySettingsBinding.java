// Generated by view binder compiler. Do not edit!
package com.frauddetection.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.frauddetection.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Switch autoAnalysisSwitch;

  @NonNull
  public final Switch biometricSwitch;

  @NonNull
  public final Switch dataSharingSwitch;

  @NonNull
  public final TextView lastUpdateText;

  @NonNull
  public final CardView modelCard;

  @NonNull
  public final TextView modelVersionText;

  @NonNull
  public final Switch notificationSwitch;

  @NonNull
  public final CardView privacyCard;

  @NonNull
  public final CardView securityCard;

  private ActivitySettingsBinding(@NonNull ScrollView rootView, @NonNull Switch autoAnalysisSwitch,
      @NonNull Switch biometricSwitch, @NonNull Switch dataSharingSwitch,
      @NonNull TextView lastUpdateText, @NonNull CardView modelCard,
      @NonNull TextView modelVersionText, @NonNull Switch notificationSwitch,
      @NonNull CardView privacyCard, @NonNull CardView securityCard) {
    this.rootView = rootView;
    this.autoAnalysisSwitch = autoAnalysisSwitch;
    this.biometricSwitch = biometricSwitch;
    this.dataSharingSwitch = dataSharingSwitch;
    this.lastUpdateText = lastUpdateText;
    this.modelCard = modelCard;
    this.modelVersionText = modelVersionText;
    this.notificationSwitch = notificationSwitch;
    this.privacyCard = privacyCard;
    this.securityCard = securityCard;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.auto_analysis_switch;
      Switch autoAnalysisSwitch = ViewBindings.findChildViewById(rootView, id);
      if (autoAnalysisSwitch == null) {
        break missingId;
      }

      id = R.id.biometric_switch;
      Switch biometricSwitch = ViewBindings.findChildViewById(rootView, id);
      if (biometricSwitch == null) {
        break missingId;
      }

      id = R.id.data_sharing_switch;
      Switch dataSharingSwitch = ViewBindings.findChildViewById(rootView, id);
      if (dataSharingSwitch == null) {
        break missingId;
      }

      id = R.id.last_update_text;
      TextView lastUpdateText = ViewBindings.findChildViewById(rootView, id);
      if (lastUpdateText == null) {
        break missingId;
      }

      id = R.id.model_card;
      CardView modelCard = ViewBindings.findChildViewById(rootView, id);
      if (modelCard == null) {
        break missingId;
      }

      id = R.id.model_version_text;
      TextView modelVersionText = ViewBindings.findChildViewById(rootView, id);
      if (modelVersionText == null) {
        break missingId;
      }

      id = R.id.notification_switch;
      Switch notificationSwitch = ViewBindings.findChildViewById(rootView, id);
      if (notificationSwitch == null) {
        break missingId;
      }

      id = R.id.privacy_card;
      CardView privacyCard = ViewBindings.findChildViewById(rootView, id);
      if (privacyCard == null) {
        break missingId;
      }

      id = R.id.security_card;
      CardView securityCard = ViewBindings.findChildViewById(rootView, id);
      if (securityCard == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ScrollView) rootView, autoAnalysisSwitch, biometricSwitch,
          dataSharingSwitch, lastUpdateText, modelCard, modelVersionText, notificationSwitch,
          privacyCard, securityCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
